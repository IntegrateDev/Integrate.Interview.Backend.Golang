package server

import (
	_ "Integrate.Interview.Backend.Golang/docs" // docs is generated by Swag CLI, you have to import it.
	"Integrate.Interview.Backend.Golang/server/controllers"
	"github.com/gorilla/mux"
	httpSwagger "github.com/swaggo/http-swagger"
	"log"
	"net/http"
)

func Api(httpmanager controllers.Manager) (*mux.Router, *mux.Router) {
	return apiSetup(httpmanager), docsSetup()
}

type Routes struct {
	Name        string
	Method      string
	Path        string
	HandlerFunc func(w http.ResponseWriter, r *http.Request)
}

func apiSetup(httpmanager controllers.Manager) *mux.Router {

	router := mux.NewRouter()

	routes := []Routes{
		Routes{
			Name:        "HealthCheck",
			Method:      "GET",
			Path:        "/health",
			HandlerFunc: httpmanager.HealthCheck,
		},
		Routes{
			Name:        "Leads",
			Method:      "GET",
			Path:        "/leads",
			HandlerFunc: httpmanager.AllLeads,
		},
	}

	for _, route := range routes {
		router.HandleFunc(route.Path, route.HandlerFunc).Methods(route.Method)
	}

	router.Use(loggingMiddleware)
	return router
}

// @host localhost:8084
// @BasePath /
func docsSetup() *mux.Router {
	routerdocs := mux.NewRouter()
	routerdocs.PathPrefix("/swagger/").Handler(httpSwagger.Handler(
		httpSwagger.URL("http://localhost:1323/swagger/doc.json"), //The url pointing to API definition
		httpSwagger.DeepLinking(true),
		httpSwagger.DocExpansion("none"),
		httpSwagger.DomID("#swagger-ui"),
	))
	return routerdocs
}

func loggingMiddleware(next http.Handler) http.Handler {
	return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		w.Header().Set("Access-Control-Allow-Origin", "*")
		w.Header().Set("Content-Type", "application/json")

		log.Println(r.RequestURI)

		next.ServeHTTP(w, r)
	})
}
